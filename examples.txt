// //! FUnction to initialize Firebase App
  // static Future<FirebaseApp> initializeFirebase() async {
  //   FirebaseApp firebaseApp = await Firebase.initializeApp();

  //   return firebaseApp;
  // }

  // //! Function for Googel Sign in
  // static Future<User> signInwithGoogle({BuildContext context}) async {
  //   FirebaseAuth auth = FirebaseAuth.instance;
  //   User user;

  //   if (kIsWeb) {
  //     GoogleAuthProvider authProvider = GoogleAuthProvider();

  //     try {
  //       final UserCredential userCredential =
  //           await auth.signInWithPopup(authProvider);

  //       user = userCredential.user;
  //     } catch (e) {
  //       print(e);
  //     }
  //   } else {
  //     final GoogleSignIn googleSignIn = GoogleSignIn();

  //     final GoogleSignInAccount googleSignInAccount =
  //         await googleSignIn.signIn();

  //     if (googleSignInAccount != null) {
  //       final GoogleSignInAuthentication googleSignInAuthentication =
  //           await googleSignInAccount.authentication;

  //       final AuthCredential credential = GoogleAuthProvider.credential(
  //         accessToken: googleSignInAuthentication.accessToken,
  //         idToken: googleSignInAuthentication.idToken,
  //       );

  //       try {
  //         final UserCredential userCredential =
  //             await auth.signInWithCredential(credential);

  //         user = userCredential.user;
  //       } on FirebaseAuthException catch (e) {
  //         if (e.code == 'account-exists-with-different-credential') {
  //           ScaffoldMessenger.of(context).showSnackBar(
  //             Authentication.customSnackBar(
  //               content:
  //                   'The account already exists with a different credential.',
  //             ),
  //           );
  //         } else if (e.code == 'invalid-credential') {
  //           ScaffoldMessenger.of(context).showSnackBar(
  //             Authentication.customSnackBar(
  //               content:
  //                   'Error occurred while accessing credentials. Try again.',
  //             ),
  //           );
  //         }
  //       } catch (e) {
  //         ScaffoldMessenger.of(context).showSnackBar(
  //           Authentication.customSnackBar(
  //             content: 'Error occurred using Google Sign-In. Try again.',
  //           ),
  //         );
  //       }
  //     }
  //   }

  //   return user;
  // }

  // //! Snackbar Method
  // static SnackBar customSnackBar({String content}) {
  //   return SnackBar(
  //     backgroundColor: Colors.black,
  //     content: Text(
  //       content,
  //       style: TextStyle(color: Colors.redAccent, letterSpacing: 0.5),
  //     ),
  //   );
  // }








  // Future<void> addTodo(String content, String uid) async {
  //   try {
  //     await _firestore
  //         .collection("users")
  //         .document(uid)
  //         .collection("todos")
  //         .add({
  //       'dateCreated': Timestamp.now(),
  //       'content': content,
  //       'done': false,
  //     });
  //   } catch (e) {
  //     print(e);
  //     rethrow;
  //   }
  // }

  // Stream<List<TodoModel>> todoStream(String uid) {
  //   return _firestore
  //       .collection("users")
  //       .document(uid)
  //       .collection("todos")
  //       .orderBy("dateCreated", descending: true)
  //       .snapshots()
  //       .map((QuerySnapshot query) {
  //     List<TodoModel> retVal = List();
  //     query.documents.forEach((element) {
  //       retVal.add(TodoModel.fromDocumentSnapshot(element));
  //     });
  //     return retVal;
  //   });
  // }

  // Future<void> updateTodo(bool newValue, String uid, String todoId) async {
  //   try {
  //     _firestore
  //         .collection("users")
  //         .document(uid)
  //         .collection("todos")
  //         .document(todoId)
  //         .updateData({"done": newValue});
  //   } catch (e) {
  //     print(e);
  //     rethrow;
  //   }
  // }